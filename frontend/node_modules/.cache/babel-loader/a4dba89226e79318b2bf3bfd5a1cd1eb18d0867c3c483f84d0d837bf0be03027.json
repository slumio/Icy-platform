{"ast":null,"code":"var _jsxFileName = \"/home/slumio/icy-platform/frontend/src/pages/DiscoveryPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { runDiscovery } from '../api/discoveryApi';\nimport { getCampaign } from '../api/campaignsApi';\nimport InfluencerCard from '../components/InfluencerCard';\nimport AnalyticsDashboard from '../components/AnalyticsDashboard';\nimport './DiscoveryPage.css'; // We'll create this CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DiscoveryPage() {\n  _s();\n  const {\n    campaignId\n  } = useParams(); // Get campaignId from the URL\n  const [campaign, setCampaign] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    // This function runs once when the component mounts\n    const initializeDiscovery = async () => {\n      try {\n        setLoading(true);\n        setError('');\n        // 1. Tell the backend to start the discovery process\n        await runDiscovery(campaignId);\n        // 2. Once done, fetch the updated campaign data with the influencer list\n        const campaignData = await getCampaign(campaignId);\n        setCampaign(campaignData);\n      } catch (err) {\n        setError(\"Oops! Something went wrong while finding influencers. Please try creating a new campaign.\");\n        console.error(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    initializeDiscovery();\n  }, [campaignId]); // The effect re-runs if the campaignId changes\n\n  // Conditional Rendering based on the state\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Analyzing & Scoring Influencers...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Our AI is finding the perfect match for your brand.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"home-link\",\n        children: \"Go back to Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"discovery-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Discovery Results for \\\"\", campaign === null || campaign === void 0 ? void 0 : campaign.campaign_name, \"\\\"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"We've analyzed and scored these influencers based on your brand's unique profile.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"influencer-grid\",\n      children: campaign === null || campaign === void 0 ? void 0 : campaign.discovered_influencers.map(influencer => /*#__PURE__*/_jsxDEV(InfluencerCard, {\n        influencer: influencer\n      }, influencer.handle, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"divider\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AnalyticsDashboard, {\n      campaignName: campaign === null || campaign === void 0 ? void 0 : campaign.campaign_name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(DiscoveryPage, \"2XGIog74PSejQEF9Yv9vbVfGBHg=\", false, function () {\n  return [useParams];\n});\n_c = DiscoveryPage;\nexport default DiscoveryPage;\nvar _c;\n$RefreshReg$(_c, \"DiscoveryPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","runDiscovery","getCampaign","InfluencerCard","AnalyticsDashboard","jsxDEV","_jsxDEV","DiscoveryPage","_s","campaignId","campaign","setCampaign","loading","setLoading","error","setError","initializeDiscovery","campaignData","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","campaign_name","discovered_influencers","map","influencer","handle","campaignName","_c","$RefreshReg$"],"sources":["/home/slumio/icy-platform/frontend/src/pages/DiscoveryPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { runDiscovery } from '../api/discoveryApi';\nimport { getCampaign } from '../api/campaignsApi';\nimport InfluencerCard from '../components/InfluencerCard';\nimport AnalyticsDashboard from '../components/AnalyticsDashboard';\nimport './DiscoveryPage.css'; // We'll create this CSS file\n\nfunction DiscoveryPage() {\n  const { campaignId } = useParams(); // Get campaignId from the URL\n  const [campaign, setCampaign] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    // This function runs once when the component mounts\n    const initializeDiscovery = async () => {\n      try {\n        setLoading(true);\n        setError('');\n        // 1. Tell the backend to start the discovery process\n        await runDiscovery(campaignId);\n        // 2. Once done, fetch the updated campaign data with the influencer list\n        const campaignData = await getCampaign(campaignId);\n        setCampaign(campaignData);\n      } catch (err) {\n        setError(\"Oops! Something went wrong while finding influencers. Please try creating a new campaign.\");\n        console.error(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    initializeDiscovery();\n  }, [campaignId]); // The effect re-runs if the campaignId changes\n\n  // Conditional Rendering based on the state\n  if (loading) {\n    return (\n      <div className=\"loading-container\">\n        <div className=\"spinner\"></div>\n        <h2>Analyzing & Scoring Influencers...</h2>\n        <p>Our AI is finding the perfect match for your brand.</p>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"error-container\">\n        <h2>{error}</h2>\n        <Link to=\"/\" className=\"home-link\">Go back to Dashboard</Link>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"page-container\">\n      <header className=\"discovery-header\">\n        <h1>Discovery Results for \"{campaign?.campaign_name}\"</h1>\n        <p>\n          We've analyzed and scored these influencers based on your brand's unique profile.\n        </p>\n      </header>\n\n      <div className=\"influencer-grid\">\n        {campaign?.discovered_influencers.map(influencer => (\n          <InfluencerCard key={influencer.handle} influencer={influencer} />\n        ))}\n      </div>\n      \n      <hr className=\"divider\" />\n      \n      {/* Include the analytics dashboard with mock data */}\n      <AnalyticsDashboard campaignName={campaign?.campaign_name} />\n    </div>\n  );\n}\n\nexport default DiscoveryPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}